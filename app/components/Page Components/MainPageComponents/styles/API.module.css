/* Keyframes for text fading effect */
@keyframes textFade {
  /* Start and end points of the animation (creates a looping effect) */
  0% {
    /* Set initial and final background position for the gradient, creating the fade effect */
    background-position: 100% 50%;
  }
  100% {
    /* Change background position at halfway through the animation to complete the fade effect */
    background-position: -100% 50%;
  }
}

/* Class for elements with smooth text transition effect */
.smoothTextTransition {
  font-size: 2rem; /* Font size of the text, can be adjusted based on design requirements */
  font-weight: bold; /* Bold font weight to enhance visibility of the text */
  color: transparent; /* Makes the text color transparent to allow background to be visible through the text */
  background: linear-gradient(
    to right,
    #9e829c 2%,
    white 2%,
    white 90%
  ); /* Applies a linear gradient as the text background */
  background-size: 200% 100%; /* Scales the background size to allow for a smooth transition effect */
  -webkit-background-clip: text; /* Ensures the background (gradient) is clipped to the text (Webkit browsers) */
  background-clip: text; /* Ensures the background (gradient) is clipped to the text for standard compliance */
  -webkit-text-fill-color: transparent; /* For Webkit browsers, makes the text fill transparent to show the background */
  animation: textFade 12s ease-in-out infinite; /* Applies the defined animation to the text with duration, timing function, and repetition */
}

.item {
  position: relative;
  padding-left: 1.5rem;
}

/* Add this in your global.css or in a <style> tag inside your component if you're using styled-jsx */
.item::before {
  content: 'âœ”'; /* Unicode checkmark */
  position: absolute;
  left: 0; /* Adjust left position based on your design */
  top: 50%; /* Center vertically */
  transform: translateY(-50%); /* Additional centering tweak */
  color: #676767; /* techGreen color */
  font-size: 1em; /* Adjust size as needed */
}
